{
  "uid" : "b961c589bbc3e764",
  "name" : "购买满减商品,折扣商品,普通商品",
  "fullName" : "case.test_order#test_test_order7",
  "historyId" : "3c4723caa36a9ba62066fe5c82895c68",
  "time" : {
    "start" : 1615079531367,
    "stop" : 1615079531366,
    "duration" : -1
  },
  "description" : "'满减商品和折扣商品",
  "descriptionHtml" : "<p>'满减商品和折扣商品</p>\n",
  "status" : "failed",
  "statusMessage" : "pytest_assume.plugin.FailedAssumption: \n2 Failed Assumptions:\n\ncase\\test_order.py:983: AssumptionFailure\n>>\tpytest.assume(reduce_price == promotionAmount)  # 断言优惠金额是否正确\nAssertionError: assert False\n\ncase\\test_order.py:985: AssumptionFailure\n>>\tpytest.assume(price == payAmount)  # 断言支付金额是否正确\nAssertionError: assert False",
  "statusTrace" : "tp = <class 'pytest_assume.plugin.FailedAssumption'>, value = None, tb = None\n\n    def reraise(tp, value, tb=None):\n        try:\n            if value is None:\n                value = tp()\n            if value.__traceback__ is not tb:\n>               raise value.with_traceback(tb)\nE               pytest_assume.plugin.FailedAssumption: \nE               2 Failed Assumptions:\nE               \nE               case\\test_order.py:983: AssumptionFailure\nE               >>\tpytest.assume(reduce_price == promotionAmount)  # 断言优惠金额是否正确\nE               AssertionError: assert False\nE               \nE               case\\test_order.py:985: AssumptionFailure\nE               >>\tpytest.assume(price == payAmount)  # 断言支付金额是否正确\nE               AssertionError: assert False\n\nd:\\python\\lib\\site-packages\\six.py:702: FailedAssumption",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "购物促销活动商品"
  }, {
    "name" : "feature",
    "value" : "购物流程"
  }, {
    "name" : "parentSuite",
    "value" : "case"
  }, {
    "name" : "suite",
    "value" : "test_order"
  }, {
    "name" : "host",
    "value" : "DESKTOP-BE07TO9"
  }, {
    "name" : "thread",
    "value" : "9988-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "case.test_order"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "quantity_1",
    "value" : "3"
  }, {
    "name" : "quantity_2",
    "value" : "1"
  }, {
    "name" : "quantity_3",
    "value" : "1"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "b961c589bbc3e764.json",
  "parameterValues" : [ "3", "1", "1" ]
}